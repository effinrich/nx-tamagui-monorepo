{
  "root": true,
  "ignorePatterns": ["**/*"],
  "plugins": [
    "@nx",
    "@typescript-eslint",
    "simple-import-sort",
    "import",
    "unicorn"
  ],
  "extends": [
    "eslint:recommended",
    "plugin:@typescript-eslint/recommended-type-checked",
    "plugin:@typescript-eslint/stylistic-type-checked"
  ],
  "parser": "@typescript-eslint/parser",
  "rules": {
    "simple-import-sort/imports": "error",
    "simple-import-sort/exports": "error",
    "react-hooks/rules-of-hooks": "error", // Checks rules of Hooks
    "react-hooks/exhaustive-deps": [
      "error",
      { "enableDangerousAutofixThisMayCauseInfiniteLoops": true }
    ],
    "import/default": "off",
    "import/no-named-as-default-member": "off",
    "import/no-named-as-default": "off"
  },
  "overrides": [
    {
      "files": ["*.ts", "*.tsx", "*.js", "*.jsx"],
      "rules": {
        "unicorn/filename-case": [
          "error",
          {
            "cases": {
              "kebabCase": true
            }
          }
        ],
        "@nx/enforce-module-boundaries": [
          "error",
          {
            "enforceBuildableLibDependency": true,
            "allow": [],
            "depConstraints": [
              {
                "sourceTag": "*",
                "onlyDependOnLibsWithTags": ["*"]
              }
            ]
          }
        ],
        "simple-import-sort/imports": [
          "error",
          {
            "groups": [
              // Side effect imports.
              ["^\\u0000", "^\\.\\u0000"],
              // Packages `react` related packages come first.
              ["^react", "^@?\\w"],
              // Internal packages. Add project/app specific directories as needed.
              [
                "^(@|components|libs|lib|assets|utils|.storybook|hooks|ui|partials)(/.*|$)"
              ],
              // Parent imports. Put `..` last.
              ["^\\.\\.(?!/?$)", "^\\.\\./?$"],
              // Other relative imports. Put same-folder imports and `.` last.
              ["^\\./(?=.*/)(?!/?$)", "^\\.(?!/?$)", "^\\./?$"],
              // Style imports.
              ["^.+\\.?(css)$"]
            ]
          }
        ]
      }
    },
    {
      "files": ["*.ts", "*.tsx"],
      "extends": ["plugin:@nx/typescript"],
      "rules": {}
    },
    {
      "files": ["*.js", "*.jsx"],
      "extends": ["plugin:@nx/javascript"],
      "rules": {}
    }
  ]
}
